module.exports.config = {
  name: "tinder",
  version: "1.0.0", 
  hasPermssion: 0,
  credits: "M-Drasew, HungCho", // Mod xíu by Trankhuong 
  description: "Tìm người hẹn hò!",
  commandCategory: "Love - Tình yêu", 
  usages: "", 
  cooldowns: 22
};
module.exports.run = async ({ api, event, handleReply, Users, Currencies }) => {
const { threadID, messageID, senderID } = event;
var data = await Currencies.getData(event.senderID);
var money = data.money
if( money = 0) api.sendMessage(`💵 Bạn cần có 500$ để tìm người hẹn hò!`,threadID,messageID)
  else {
  Currencies.setData(event.senderID, options = {money: money - 500})
	return api.sendMessage(`📌 Phản hồi tin nhắn để chọn giới tính.\n\n[ Boy hoặc Girl ]`, event.threadID, (error, info) => {
        global.client.handleReply.push({
            type: "ghep",
            name: this.config.name,
            author: event.senderID,
            messageID: info.messageID
        })  
     })
   }
}
module.exports.handleReply = async ({ api, event, handleReply, Users, Currencies }) => {
var token = `6628568379%7Cc1e620fa708a1d5696fb991c1bde5662`;
const axios = global.nodemodule["axios"];
const fs = global.nodemodule["fs-extra"];
const tile = (Math.random() * 50)+50;
const random = ["Cầm vàng đừng để vàng rơi. Anh ơi anh rớt người yêu rồi này.","Cần gì quà cáp cao siêu. Đóa hồng, tấm thiệp là yêu rồi mà.","Bao nhiêu cân thính cho vừa. Bao nhiêu cân bả mới lừa được anh.","Bầu trời xanh, làn mây trắng. Anh yêu nắng hay yêu em?","Nhờ có nắng mới thấy cầu vồng. Nhờ có anh mới thấy màu hạnh phúc.","Anh yêu ơi ới ời. Anh đang ở đâu?","Soái ca là của ngôn tình. Còn anh thì chỉ của mình em thôi.","Giữa cuộc đời hàng ngàn cám dỗ.Em chỉ cần bến đỗ anh thôi.","Bồ công anh bay khi có gió. Em chỉ cười vì ở đó có anh.","Ba mươi chưa phải là Tết. Không làm bạn đâu phải là hết, còn có thể làm người yêu mà.","Ai nào cho mượn avatar để em đỡ cô đơn đi.","Nắng đã có mũ, mưa đã có ô, còn em sẽ có ai?"];
    switch(handleReply.type) {
        case "ghep": {
          switch(event.body) {
					case "Boy": {
						api.unsendMessage(handleReply.messageID);
						api.sendMessage(`📌 Đang tìm đối tượng hợp với bạn!...`,event.threadID);
            var ThreadInfo = await api.getThreadInfo(event.threadID);
            var all = ThreadInfo.userInfo
            let data = [];
            for (let male of all) {
                if (male.gender == "MALE") {
                 if ( male != event.senderID) data.push(male.id)   
                }
            }
          let member = data[Math.floor(Math.random() * data.length)]
          let n = (await Users.getData(member)).name
          const url = api.getCurrentUserID(member);
          let Avatar_boy = (await axios.get(`https://graph.facebook.com/${member}/picture?height=1500&width=1500&access_token=`+token, { responseType: "arraybuffer" } )).data; 
            fs.writeFileSync( __dirname + `/cache/avt1.png`, Buffer.from(Avatar_boy, "utf-8") );
          let name = await Users.getNameUser(handleReply.author);
          let Avatar_author = (await axios.get( `https://graph.facebook.com/${handleReply.author}/picture?width=512&height=512&access_token=`+token, { responseType: "arraybuffer" } )).data;
            fs.writeFileSync( __dirname + "/cache/avt2.png", Buffer.from(Avatar_author, "utf-8") );
           var arraytag = [];
                arraytag.push({id: handleReply.author, tag: name});
                arraytag.push({id: member, tag: n});
           var imglove = []; 
              imglove.push(fs.createReadStream(__dirname + "/cache/avt1.png"));
              imglove.push(fs.createReadStream(__dirname + "/cache/avt2.png"));
           var msg = {body: `[ TINDER DATING LOVE ]\n━━━━━━━━━━━━━━━━━━\n😍 Tìm người hẹn hò với bạn thành công\n\n💌 Thính: ${random[Math.floor(Math.random() * random.length)]}\n\n💞 Tỉ lệ hợp nhau: ${tile.toFixed(2)}%\n\n❤️ Tên người ấy: `+n+" "+"\n\n🤍 Tên của bạn:"+" "+name, mentions: arraytag, attachment: imglove}
        return api.sendMessage(msg, event.threadID, event.messageID);
          } break;
          case "Girl": {
						api.unsendMessage(handleReply.messageID);
						api.sendMessage(`📌 Đang tìm đối tượng hợp với bạn!...`,event.threadID);
            var ThreadInfo = await api.getThreadInfo(event.threadID);
            var all = ThreadInfo.userInfo
            let data = [];
            for (let female of all) {
                if (female.gender == "FEMALE") {
                 if ( female != event.senderID) data.push(female.id)   
                }
            }
          let member = data[Math.floor(Math.random() * data.length)]
          let n = (await Users.getData(member)).name
          let Avatar_girl = (await axios.get(`https://graph.facebook.com/${member}/picture?height=1500&width=1500&access_token=`+token, { responseType: "arraybuffer" } )).data; 
            fs.writeFileSync( __dirname + `/cache/avt1.png`, Buffer.from(Avatar_girl, "utf-8") );
          let name = await Users.getNameUser(handleReply.author);
          let Avatar_author = (await axios.get( `https://graph.facebook.com/${handleReply.author}/picture?width=512&height=512&access_token=`+token, { responseType: "arraybuffer" } )).data;
            fs.writeFileSync( __dirname + "/cache/avt2.png", Buffer.from(Avatar_author, "utf-8") );
           var arraytag = [];
                arraytag.push({id: handleReply.author, tag: name});
                arraytag.push({id: member, tag: n});
           var imglove = []; 
              imglove.push(fs.createReadStream(__dirname + "/cache/avt1.png"));
              imglove.push(fs.createReadStream(__dirname + "/cache/avt2.png"));
           var msg = {body:`[ TINDER DATING LOVE ]\n━━━━━━━━━━━━━━━━━━\n😍 Tìm người hẹn hò với bạn thành công\n\n💌 Thính: ${random[Math.floor(Math.random() * random.length)]}\n\n💞 Tỉ lệ hợp nhau: ${tile.toFixed(2)}%\n\n❤️ Tên người ấy: `+n+" "+"\n\n🤍 Tên của bạn:"+" "+name, mentions: arraytag, attachment: imglove}
        return api.sendMessage(msg, event.threadID, event.messageID);
          } break;
        }
      }
    }
}